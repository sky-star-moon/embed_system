C51 COMPILER V9.60.0.0   GAME                                                              06/13/2020 07:51:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GAME
OBJECT MODULE PLACED IN GAME.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE GAME.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "STC15F2K60S2.H"
   2          #include "LED_segment.h"
   3          #include "KEY.h"
   4          #include "ADC.h"
   5          #include "Real_Time.h"
   6          #include "EEPROM.h"
   7          //#include "Uart.h"
   8          //#include "M485.h"
   9          #include "Beep.h"
  10          #include "ModBus_Mid_Layer.h"
  11          #define uchar unsigned char 
  12          #define uint unsigned int
  13          #define ID_Adder_High 0x00
  14          #define ID_Adder_Low 0x01
  15          
  16          #define Hour_Addr 0x02
  17          #define Minute_Addr 0x03
  18          bit flag_500us=0;
  19          bit flag_1ms=0;
  20          bit flag_10ms=0;
  21          bit flag_100ms=0;
  22          bit flag_1s=0;
  23          uchar data_485=0;
  24          char Dis[8];
  25          uchar count_500us=0;
  26          uchar count_1ms=0;
  27          uchar count_10ms=0;
  28          uchar count_100ms=0;
  29          uchar count_1s=0;
  30          uchar WATER=0x01;
  31          uchar temp_K;
  32          uint Light_Digit=0;
  33          uint Temp_Digit=0;
  34          uint player1=0;
  35          uint player2=0;
  36          uint player3=0;
  37          bit p1,p2,p3;
  38          uint wait;
  39          uchar minute_save,hour_save;
  40          void Data_fresh(){//刷新寄存器和线圈
  41   1        Regs[1]=Temp_Digit;
  42   1        Regs[2]=Light_Digit;
  43   1        Regs[3]=player1;
  44   1        Regs[4]=player2;
  45   1        Regs[5]=player3;
  46   1        Regs[6]=hour_save;
  47   1        Regs[7]=minute_save;
  48   1        Coil=p1?(Coil|0x01):(Coil&~0x01);
  49   1        Coil=p2?(Coil|0x02):(Coil&~0x02);
  50   1        Coil=p3?(Coil|0x04):(Coil&~0x04);
  51   1        Coil=bp_ON?(Coil|0x08):(Coil&~0x08);
  52   1      }
  53          
  54          void GPIO_Init(void)                                                            //硬件初始化/BootLoad/BIOS
  55          {   
C51 COMPILER V9.60.0.0   GAME                                                              06/13/2020 07:51:44 PAGE 2   

  56   1        P0M1=0x00;            //设置P0为推挽模式，点亮数码管
  57   1        P0M0=0xff;
  58   1        P2M1=0x00;
  59   1        P2M0=0x08;            //将P2^3设置为推挽模式，其余为准双向口模式
  60   1        P3M0 = 0x00 ;
  61   1        P3M1 = 0x00 ;
  62   1        P1M0 = 0x00 ;
  63   1        P1M1 = 0x00 ;       //P1?P3????
  64   1      }
  65          void Timer0_Init(void)    //1mS@12.000MHz
  66          { AUXR &= 0x7f;     
  67   1        TMOD &= 0xf0;     //使用定时器0，16位重装载模式
  68   1        TH0=(65535-500)/256; //高8位赋初值
  69   1        TL0=(65535-500)%256; //低8位赋初值
  70   1        TR0=1;          //启动定时器1 
  71   1        ET0=1;                //开启定时器0中断
  72   1      }
  73          
  74          void timer0() interrupt 1
  75          {
  76   1        flag_500us=1;
  77   1        if(wait){wait--;}  
  78   1      }
  79          void Func_500us(){
  80   1        flag_500us=0;
  81   1        count_500us++;
  82   1        if(count_500us==2){
  83   2          flag_1ms=1;
  84   2          count_500us=0;
  85   2        }
  86   1        Voice();//蜂鸣器驱动
  87   1      }
  88          void Key_Count(){//按键技术
  89   1        switch (temp_K){
  90   2          case 1:player1=player1+1;p1=!p1;break;//计数的同时，将线圈（p1和线圈等价）反转
  91   2          case 2:player2=player2+1;p2=!p2;break;
  92   2          case 3:player3=player3+1;p3=!p3;break;
  93   2        }
  94   1      }
  95          void Func_1ms(){
  96   1        flag_1ms=0;
  97   1        count_1ms++;               
  98   1        if( count_1ms == 10 )   {
  99   2          flag_10ms = 1; 
 100   2          count_1ms = 0;  
 101   2        }
 102   1        Data_fresh();//更新寄存器和线圈
 103   1        Display();  //数码管&LED灯驱动
 104   1        count_key();//按键驱动
 105   1        ModBus_Instruct_Handle(Request);//Mid层检查是否有请求报文
 106   1        temp_K = key_push();//按键
 107   1          if(temp_K==1){
 108   2            write_add( Hour_Addr, realtime.hour );
 109   2          }
 110   1          else if(temp_K==2){
 111   2            write_add( Minute_Addr, realtime.second );
 112   2          }
 113   1          else if(temp_K==3){
 114   2            hour_save=read_add( Hour_Addr );
 115   2            _nop_();
 116   2            minute_save=read_add( Minute_Addr );
 117   2            _nop_();
C51 COMPILER V9.60.0.0   GAME                                                              06/13/2020 07:51:44 PAGE 3   

 118   2          }
 119   1          Key_Count();
 120   1      }
 121          void Func_10ms(){
 122   1        flag_10ms=0;
 123   1        count_10ms++; 
 124   1        if( count_10ms == 10 )  {
 125   2          flag_100ms = 1; 
 126   2          count_10ms = 0;  
 127   2        }
 128   1        print_Light(p1 | p2*4 | p3*16 | bp_ON*64);
 129   1        ADC_Continue();
 130   1        Light_Digit=adc.ADC_Num[0];
 131   1        Temp_Digit=tempdata[(adc.ADC_Num[1]>>2)-65];
 132   1      }
 133          void get_number(){        //数码管显示时分秒
 134   1        Dis[0]=realtime.hour/10;
 135   1        Dis[1]=realtime.hour%10;
 136   1        Dis[2]=0x7f;
 137   1        Dis[3]=realtime.minute/10;
 138   1        Dis[4]=realtime.minute%10;
 139   1        Dis[5]=0x7f;
 140   1        Dis[6]=realtime.second/10;
 141   1        Dis[7]=realtime.second%10;
 142   1        print_LED(Dis[0],Dis[1],Dis[2],Dis[3],Dis[4],Dis[5],Dis[6],Dis[7]);
 143   1      }
 144          void Func_100ms(){
 145   1        flag_100ms=0;
 146   1        count_100ms++;
 147   1        if(count_100ms==10) {count_100ms=0;flag_1s=1;}
 148   1        realtime=GetDA1302();//获取时间
 149   1        get_number();////数码管显示时分秒
 150   1      }
 151          
 152          
 153          void Func_1s(){
 154   1        flag_1s=0;
 155   1        count_1s++; 
 156   1      }
 157          void main(){
 158   1        GPIO_Init();
 159   1        Timer0_Init();
 160   1        EA=1;
 161   1        IIC_init();                       //初始化IIC，非易失存储器
 162   1        set_pose(0,7);                    //让0~7位数码管亮
 163   1        Light_ON();                       //打开流水灯
 164   1        set_LED_char(2,0x40);             //3号位置显示横杠
 165   1        set_LED_char(5,0x40);              //4号位置显示横杠
 166   1        print_Light(WATER);               //流水灯显示0x01
 167   1        Segment_ON();                     //开启数码管
 168   1        key_init();                       //按键初始化
 169   1        set_Beep(2000,0xff);              //蜂鸣器2000Hz，0xff表示一直发声
 170   1        Beep_OFF();                       //关闭蜂鸣器
 171   1        key_enable(1);                    //使能按键1
 172   1        key_enable(2);                    //使能按键2
 173   1        key_enable(3);                    //使能按键3
 174   1        ModBus_INIT();                      //初始化ModBus
 175   1        ADC_Func();                         //注册ADC
 176   1        ADC_ON(LIGHT);                      //
 177   1        ADC_ON(TEMP);                       //
 178   1        Light_Init();                       //初始化Light
 179   1        //Regs[0]=read_add( ID_Addr );  
C51 COMPILER V9.60.0.0   GAME                                                              06/13/2020 07:51:44 PAGE 4   

 180   1        if(DS1302Read(DS1302_second_read)&0X80)
 181   1           Init_DS1302();                   //初始DS1302，向1302的CE置0，启动实时时钟
 182   1        Regs[0]=0;                          
 183   1        Regs[0]=read_add( ID_Adder_High )*256;
 184   1        _nop_();
 185   1        Regs[0]=Regs[0]+read_add( ID_Adder_Low);//读取存储在非易失中的ID
 186   1        _nop_();
 187   1        while(1){
 188   2          if(flag_500us  ==1) {Func_500us();}
 189   2          if(flag_1ms  ==1) {Func_1ms();   }
 190   2          if(flag_10ms ==1) {Func_10ms();ModBus_send(); }//Base层检查是否有响应报文发送
 191   2          if(flag_100ms==1) {Func_100ms();}
 192   2          if(flag_1s   ==1) {Func_1s();}
 193   2        }
 194   1      }
 195          
 196          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6167    ----
   CONSTANT SIZE    =    340    ----
   XDATA SIZE       =    337      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     12    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
